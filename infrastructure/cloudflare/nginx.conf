# Nginx configuration for Cloudflare edge simulation
# This simulates Cloudflare's edge caching and optimization features locally

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format similar to Cloudflare
    log_format cloudflare_format '$remote_addr - $remote_user [$time_local] '
                                '"$request" $status $body_bytes_sent '
                                '"$http_referer" "$http_user_agent" '
                                '$request_time $upstream_response_time '
                                '"$http_cf_ray" "$http_cf_connecting_ip"';

    access_log /var/log/nginx/access.log cloudflare_format;

    # Optimization settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression (simulating Cloudflare compression)
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting (simulating Cloudflare rate limiting)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

    # Cache zones
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=2g inactive=7d use_temp_path=off;

    # Upstream backends
    upstream backend_api {
        least_conn;
        server web-backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream ai_services {
        least_conn;
        server ai-services:8001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream mcp_server {
        least_conn;
        server mcp-server:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Enable HTTP/2
        # listen 443 ssl http2 default_server;
        # listen [::]:443 ssl http2 default_server;

        # SSL configuration (for HTTPS simulation)
        # ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        # ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        # ssl_prefer_server_ciphers off;

        # Connection limits
        limit_conn perip 10;
        limit_conn perserver 100;

        # Root directory for static files
        root /var/www/html;
        index index.html;

        # Security headers for all responses
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:; media-src 'self' https:; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests;" always;

        # API routes with rate limiting and caching
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Cache configuration
            proxy_cache api_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_revalidate on;
            proxy_cache_lock on;
            
            # Cache bypass for authenticated requests
            proxy_cache_bypass $http_authorization;
            proxy_no_cache $http_authorization;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header CF-Connecting-IP $remote_addr;
            proxy_set_header CF-Ray $request_id;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Backend
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Cache status header
            add_header X-Cache-Status $upstream_cache_status always;
        }

        # Authentication routes with stricter rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            # No caching for auth endpoints
            proxy_cache off;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # AI services routes
        location /api/ai/ {
            limit_req zone=api burst=10 nodelay;
            
            # Longer timeout for AI processing
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://ai_services;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # MCP server routes
        location /mcp/ {
            limit_req zone=api burst=15 nodelay;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://mcp_server/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # File upload with size limits
        location /api/upload/ {
            limit_req zone=upload burst=5 nodelay;
            client_max_body_size 50M;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Static files with aggressive caching
        location /static/ {
            proxy_cache static_cache;
            proxy_cache_valid 200 7d;
            proxy_cache_use_stale error timeout invalid_header updating;
            
            expires 7d;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status $upstream_cache_status always;
            
            proxy_pass http://backend_api;
        }

        # Health check endpoint
        location /health {
            access_log off;
            
            proxy_cache off;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_pass http://backend_api;
        }

        # WebSocket support for real-time features
        location /ws/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://backend_api;
        }

        # Security - Block common attack patterns
        location ~* \.(env|git|htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
            return 404;
        }

        # Block access to hidden files
        location ~ /\. {
            deny all;
            return 404;
        }

        # Default fallback
        location / {
            try_files $uri $uri/ @backend;
        }

        location @backend {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://backend_api;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /var/www/html;
        }
    }

    # Rate limiting status page
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
    }
}

# Stream configuration for TCP/UDP load balancing
stream {
    # Log format for stream
    log_format stream_format '$remote_addr [$time_local] $protocol $bytes_sent $bytes_received $session_time';
    access_log /var/log/nginx/stream.log stream_format;

    # Upstream for database connections
    upstream postgres_backend {
        server postgres:5432 max_fails=3 fail_timeout=30s;
    }

    upstream redis_backend {
        server redis:6379 max_fails=3 fail_timeout=30s;
    }

    # Database proxy (if needed)
    server {
        listen 15432;
        proxy_pass postgres_backend;
        proxy_timeout 1s;
        proxy_responses 1;
    }

    # Redis proxy (if needed)
    server {
        listen 16379;
        proxy_pass redis_backend;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}