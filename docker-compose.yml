version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgis/postgis:15-3.4
    container_name: fataplus-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fataplus_dev}
      POSTGRES_USER: ${POSTGRES_USER:-fataplus_dev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fataplus_dev} -d ${POSTGRES_DB:-fataplus_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fataplus-network

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: fataplus-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - fataplus-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: fataplus-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - fataplus-network

  # Web Frontend (Next.js)
  web-frontend:
    build:
      context: ./web-frontend
      dockerfile: Dockerfile
    container_name: fataplus-web-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://web-backend:8000
      - NEXT_PUBLIC_AI_API_URL=http://ai-services:8001
    ports:
      - "3000:3000"
    volumes:
      - ./web-frontend:/app
      - /app/node_modules
    depends_on:
      - web-backend
      - ai-services
    networks:
      - fataplus-network
    command: npm run dev

  # AI Service with Motia
  motia-service:
    build:
      context: ./motia-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://dev_user:dev_password_change_me@postgres:5432/fataplus_dev}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - MOTIA_PORT=8001
      - MAIN_BACKEND_URL=http://web-backend:8000
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - WEATHER_API_KEY=${WEATHER_API_KEY:-}
    depends_on:
      - postgres
      - redis
    networks:
      - fataplus-network
    volumes:
      - ./motia-service:/app
      - /app/node_modules
    command: npm run dev

  # Web Backend (FastAPI)
  web-backend:
    build:
      context: ./web-backend
      dockerfile: Dockerfile
    container_name: fataplus-web-backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-fataplus_dev}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-fataplus_dev}
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - AI_SERVICES_URL=http://motia-service:8001
      - MOTIA_SERVICE_URL=http://motia-service:8001
      - ENVIRONMENT=development
      # LDAP Configuration (Cloudron)
      - LDAP_ENABLED=false
      - LDAP_SERVER=localhost
      - LDAP_PORT=389
      - LDAP_USE_SSL=false
      - LDAP_BASE_DN=dc=cloudron,dc=local
      - LDAP_BIND_DN=
      - LDAP_BIND_PASSWORD=
      - LDAP_USER_SEARCH_FILTER=(uid={username})
      - LDAP_USER_DISPLAY_NAME_ATTRIBUTE=cn
      - LDAP_USER_EMAIL_ATTRIBUTE=mail
      # JWT Configuration
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
      # External API Keys
      - OPENWEATHER_API_KEY=
      - STRIPE_PUBLIC_KEY=
      - STRIPE_SECRET_KEY=
      - SENDGRID_API_KEY=
      - AIRTEL_API_KEY=
      - AIRTEL_API_SECRET=
    ports:
      - "8000:8000"
    volumes:
      - ./web-backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      motia-service:
        condition: service_started
    networks:
      - fataplus-network
    command: sh -c "cd /app/src && python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  # AI Services (Python/ML)
  ai-services:
    build:
      context: ./ai-services
      dockerfile: Dockerfile
    container_name: fataplus-ai-services
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-fataplus_dev}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-fataplus_dev}
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - ENVIRONMENT=development
    ports:
      - "8001:8001"
    volumes:
      - ./ai-services:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - fataplus-network

  # MCP Server (Model Context Protocol)
  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    container_name: fataplus-mcp-server
    environment:
      - FATAPLUS_API_URL=http://web-backend:8000
      - FATAPLUS_API_KEY=${FATAPLUS_API_KEY:-}
      - MCP_SERVER_PORT=3001
      - MCP_SERVER_HOST=0.0.0.0
      - LOG_LEVEL=info
      - NODE_ENV=production
      - DEBUG=false
    ports:
      - "3001:3001"
    volumes:
      - ./mcp-server:/app
      - /app/node_modules
    depends_on:
      - web-backend
      - ai-services
    networks:
      - fataplus-network
    restart: unless-stopped

  # Mobile App Development (Optional - for Expo/React Native)
  # Uncomment if you want to run mobile development in Docker
  # mobile-dev:
  #   build:
  #     context: ./mobile-app
  #     dockerfile: Dockerfile
  #   container_name: fataplus-mobile-dev
  #   environment:
  #     - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
  #   ports:
  #     - "19000:19000"
  #     - "19001:19001"
  #     - "19002:19002"
  #   volumes:
  #     - ./mobile-app:/app
  #     - /app/node_modules
  #   networks:
  #     - fataplus-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  fataplus-network:
    driver: bridge